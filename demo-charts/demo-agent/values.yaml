# Default values for demo-agent.

poolName: "name of your Azure Pipelines agent pool"
organizationUrl: "URL of your Azure Pipelines organization (https://dev.azure.com/org-name)"
maxTerminatedPodsToKeep: 1
agentMinIdlePeriod: "5m"
pat: ""  # Override this via --set
# Overwrite default values, if necessary:
dummyAgentGarbageCollectionInterval: "30m"
dummyAgentDeletionMinAge: "2h"
normalOfflineAgentDeletionMinAge: "5h"

azpAgentContainer:
  image:
    registry: ghcr.io
    repository: mshekow/azp-agent
    tag: "2025.01.20"
    pullPolicy: Always

  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 512Mi

reusableCacheVolumes:
  - name: buildkit-cache
    storageClassName: hostpath
    requestedStorage: 70Gi  # Note: keep this in sync with <keepTotalGi>, see below

buildkitConfig:
  debug: false
  gc:
    # how many Gigabytes of cache mount data to keep (related to "RUN --mount=type=cache" statements in a Dockerfile)
    keepCacheMountsGi: 30
    # how many Gigabytes of cache data to keep overall (leaving "<keepTotalGi> - <keepCacheMountsGi>" for normal image layers)
    # Keep this in sync with reusableCacheVolumes[*].requestedStorage, such that requestedStorage is slightly larger
    # than <keepTotalGi>, to give BuildKit's GC routines enough time (and avoid "no space left on device" errors)
    keepTotalGi: 60

# Definition of your different agent configurations - definitely overwrite this with an array of objects!
podsWithCapabilities:
  # capabilities is an arbitrary key-value pair of Azure DevOps capabilities, may also be empty
  # (see https://learn.microsoft.com/en-us/azure/devops/pipelines/agents/agents?view=azure-devops&tabs=yaml%2Cbrowser#capabilities)
  - capabilities:
      buildkit: "1"
    minCount: 1
    maxCount: 5
    volumes:  # defines extra/custom volumes
      - name: buildkit-config
        configMap:
          name: buildkit-config
    containers:  # defines extra sidecar containers that run alongside the AZP agent container
      - name: buildkit
        image:
          registry: docker.io
          repository: moby/buildkit
          tag: master-rootless
          pullPolicy: Always
        command: [ ]  # optional, overwrites the image's ENTRYPOINT
        args: # optional, overwrites the image's CMD
          - --oci-worker-no-process-sandbox
        resources:
          limits:
            memory: 1Gi
          requests:
            memory: 1Gi
        securityContext:  # optional, may be necessary for some cluster configurations or images
          seccompProfile:
            type: Unconfined
          runAsUser: 1000
          runAsGroup: 1000
        readinessProbe:
          exec:
            command:
              - "buildctl"
              - "debug"
              - "workers"
        mountedReusableCacheVolumes:
          - name: buildkit-cache
            mountPath: /home/user/.local/share/buildkit
        volumeMounts: # defines extra volume mounts, if necessary
          - name: buildkit-config
            mountPath: /home/user/.config/buildkit
    securityContext:
      fsGroup: 1000
      # See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#configure-volume-permission-and-ownership-change-policy-for-pods
      # fsGroupChangePolicy should speed up volume mounting, because the long-lasting, recursive chown call would be expensive
      fsGroupChangePolicy: "OnRootMismatch"
    annotations:  # See https://github.com/moby/buildkit/issues/2441#issuecomment-1253683784
      container.apparmor.security.beta.kubernetes.io/buildkit: unconfined  # last segment must match the above container name

imagePullSecrets: [ ]  # these secrets are used for all containers defined in "podsWithCapabilities"

terminationGracePeriodSeconds: 1200  # a longer time period avoids that K8s can prematurely terminate ongoing AZP jobs

nameOverride: ""
fullnameOverride: ""

podLabels: { }

nodeSelector: { }

tolerations: [ ]

affinity: { }
